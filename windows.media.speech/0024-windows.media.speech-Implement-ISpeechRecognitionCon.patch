From d78bdf7b8508500071831303866aa715f9f6c039 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <besentv@gmail.com>
Date: Thu, 3 Feb 2022 15:04:16 +0100
Subject: [PATCH v2 24/45] windows.media.speech: Implement
 ISpeechRecognitionConstraint isEnabled.

---
 .../speechrecognitionlistconstraint.c          | 18 ++++++++++++++----
 dlls/windows.media.speech/tests/speech.c       | 17 ++++++++++++++++-
 2 files changed, 30 insertions(+), 5 deletions(-)

diff --git a/dlls/windows.media.speech/speechrecognitionlistconstraint.c b/dlls/windows.media.speech/speechrecognitionlistconstraint.c
index 5eb0f9feb1b..962f908bd41 100644
--- a/dlls/windows.media.speech/speechrecognitionlistconstraint.c
+++ b/dlls/windows.media.speech/speechrecognitionlistconstraint.c
@@ -32,6 +32,8 @@ struct speech_recognition_list_constraint
     ISpeechRecognitionListConstraint ISpeechRecognitionListConstraint_iface;
     ISpeechRecognitionConstraint ISpeechRecognitionConstraint_iface;
     LONG ref;
+
+    BOOLEAN enabled;
 };
 
 /*
@@ -218,17 +220,23 @@ static HRESULT STDMETHODCALLTYPE speech_recognition_constraint_GetTrustLevel(
 static HRESULT STDMETHODCALLTYPE speech_recognition_constraint_get_IsEnabled(
     ISpeechRecognitionConstraint *iface, BOOLEAN *value)
 {
-    FIXME("iface %p, value %p stub!\n", iface, value);
+    struct speech_recognition_list_constraint *impl = impl_from_ISpeechRecognitionConstraint(iface);
 
-    return E_NOTIMPL;
+    TRACE("iface %p, value %p.\n", iface, value);
+    *value = impl->enabled;
+
+    return S_OK;
 }
 
 static HRESULT STDMETHODCALLTYPE speech_recognition_constraint_put_IsEnabled(
     ISpeechRecognitionConstraint *iface, BOOLEAN value)
 {
-    FIXME("iface %p, value %u stub!\n", iface, value);
+    struct speech_recognition_list_constraint *impl = impl_from_ISpeechRecognitionConstraint(iface);
 
-    return E_NOTIMPL;
+    TRACE("iface %p, value %u.\n", iface, value);
+    impl->enabled = value;
+
+    return S_OK;
 }
 
 static HRESULT STDMETHODCALLTYPE speech_recognition_constraint_get_Tag(
@@ -311,6 +319,8 @@ static HRESULT STDMETHODCALLTYPE speech_recognition_list_constraint_create_with_
     impl->ISpeechRecognitionListConstraint_iface.lpVtbl = &i_speech_recognition_list_constraint_vtbl;
     impl->ISpeechRecognitionConstraint_iface.lpVtbl = &i_speech_recognition_constraint_vtbl;
     impl->ref = 1;
+
+    impl->enabled = TRUE;
     
     hr = ISpeechRecognitionListConstraint_QueryInterface(&impl->ISpeechRecognitionListConstraint_iface, &IID_ISpeechRecognitionListConstraint, (void**)listconstraint);
     ISpeechRecognitionListConstraint_Release(&impl->ISpeechRecognitionListConstraint_iface);
diff --git a/dlls/windows.media.speech/tests/speech.c b/dlls/windows.media.speech/tests/speech.c
index 6157321763e..b5b78049cc9 100644
--- a/dlls/windows.media.speech/tests/speech.c
+++ b/dlls/windows.media.speech/tests/speech.c
@@ -662,6 +662,7 @@ static void test_SpeechRecognitionListConstraint(void)
     IInspectable *inspectable = NULL;
     HSTRING commands[3];
     HSTRING str, tag;
+    BOOLEAN enabled;
     HRESULT hr;
     UINT32 i;
     LONG ref;
@@ -735,7 +736,21 @@ static void test_SpeechRecognitionListConstraint(void)
     ok(hr == S_OK, "ISpeechRecognitionListConstraintFactory_CreateWithTag failed, hr %#x.\n", hr);
 
     hr = ISpeechRecognitionListConstraint_QueryInterface(listconstraint, &IID_ISpeechRecognitionConstraint, (void **)&constraint);
-    ok(hr == S_OK, "Got unexpected hr %#x.\n", hr);
+    ok(hr == S_OK, "ISpeechRecognitionListConstraint_QueryInterface failed, hr %#x.\n", hr);
+
+    hr = ISpeechRecognitionConstraint_get_IsEnabled(constraint, &enabled);
+    ok(hr == S_OK, "ISpeechRecognitionConstraint_get_IsEnabled failed, hr %#x.\n", hr);
+    ok(enabled == TRUE, "SpeechRecognitionConstraint not enabled by default.\n");
+
+    hr = ISpeechRecognitionConstraint_put_IsEnabled(constraint, FALSE);
+    ok(hr == S_OK, "ISpeechRecognitionConstraint_put_IsEnabled failed, hr %#x.\n", hr);
+
+    hr = ISpeechRecognitionConstraint_get_IsEnabled(constraint, &enabled);
+    ok(hr == S_OK, "ISpeechRecognitionConstraint_get_IsEnabled failed, hr %#x.\n", hr);
+    ok(enabled == FALSE, "ISpeechRecognitionConstraint_get_IsEnabled returned TRUE.\n");
+
+    hr = ISpeechRecognitionConstraint_put_IsEnabled(constraint, TRUE);
+    ok(hr == S_OK, "ISpeechRecognitionConstraint_put_IsEnabled failed, hr %#x.\n", hr);
 
     ref = ISpeechRecognitionConstraint_Release(constraint);
     ok(ref == 1, "Got unexpected ref %u.\n", ref);
-- 
2.34.1

