From 653649f7ef12275f50bbb492251290c1af5ed1a6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <besentv@gmail.com>
Date: Sat, 5 Feb 2022 13:35:17 +0100
Subject: [PATCH v2 41/49] windows.media.speech: Add
 IAsyncOperation<SpeechRecognitionCompilationResult> stub.

---
 dlls/windows.media.speech/speechrecognizer.c | 137 +++++++++++++++++++
 1 file changed, 137 insertions(+)

diff --git a/dlls/windows.media.speech/speechrecognizer.c b/dlls/windows.media.speech/speechrecognizer.c
index 01c0ab93b71..87561cfca25 100644
--- a/dlls/windows.media.speech/speechrecognizer.c
+++ b/dlls/windows.media.speech/speechrecognizer.c
@@ -21,6 +21,143 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL(speech);
 
+/*
+ *
+ * IAsyncOperation<SpeechRecognitionCompilationResult>
+ *
+ */
+
+struct async_operation_speech_recognition_compilation_result
+{
+    IAsyncOperation_SpeechRecognitionCompilationResult IAsyncOperation_SpeechRecognitionCompilationResult_iface;
+    LONG ref;
+};
+
+static inline struct async_operation_speech_recognition_compilation_result *impl_from_IAsyncOperation_SpeechRecognitionCompilationResult(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface)
+{
+    return CONTAINING_RECORD(iface, struct async_operation_speech_recognition_compilation_result, IAsyncOperation_SpeechRecognitionCompilationResult_iface);
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_QueryInterface(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, REFIID iid, void **out)
+{
+    TRACE("iface %p, iid %s, out %p.\n", iface, debugstr_guid(iid), out);
+
+    if (IsEqualGUID(iid, &IID_IUnknown) ||
+        IsEqualGUID(iid, &IID_IInspectable) ||
+        IsEqualGUID(iid, &IID_IAsyncOperation_SpeechRecognitionCompilationResult))
+    {
+        IUnknown_AddRef(iface);
+        *out = iface;
+        return S_OK;
+    }
+
+    WARN("%s not implemented, returning E_NOINTERFACE.\n", debugstr_guid(iid));
+    *out = NULL;
+    return E_NOINTERFACE;
+}
+
+static ULONG STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_AddRef(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface)
+{
+    struct async_operation_speech_recognition_compilation_result *impl = impl_from_IAsyncOperation_SpeechRecognitionCompilationResult(iface);
+
+    ULONG ref = InterlockedIncrement(&impl->ref);
+    TRACE("iface %p, ref %u.\n", iface, ref);
+
+    return ref;
+}
+
+static ULONG STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_Release(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface)
+{
+    struct async_operation_speech_recognition_compilation_result *impl = impl_from_IAsyncOperation_SpeechRecognitionCompilationResult(iface);
+
+    ULONG ref = InterlockedDecrement(&impl->ref);
+    TRACE("iface %p, ref %u.\n", iface, ref);
+
+    if(!ref)
+        free(impl);
+
+    return ref;
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_GetIids(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, ULONG *iid_count, IID **iids)
+{
+    FIXME("iface %p, iid_count %p, iids %p stub!\n", iface, iid_count, iids);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_GetRuntimeClassName(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, HSTRING *class_name)
+{
+    FIXME("iface %p, class_name %p stub!\n", iface, class_name);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_GetTrustLevel(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, TrustLevel *trust_level)
+{
+    FIXME("iface %p, trust_level %p stub!\n", iface, trust_level);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_get_Completed(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, IAsyncOperationCompletedHandler_SpeechRecognitionCompilationResult *handler)
+{
+    FIXME("iface %p, handler %p stub!\n", iface, handler);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_put_Completed(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, IAsyncOperationCompletedHandler_SpeechRecognitionCompilationResult **handler)
+{
+    FIXME("iface %p, handler %p stub!\n", iface, handler);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE async_operation_speech_recognition_compilation_result_GetResults(
+    IAsyncOperation_SpeechRecognitionCompilationResult *iface, ISpeechRecognitionCompilationResult ***results)
+{
+    FIXME("iface %p, results %p stub!\n", iface, results);
+    return E_NOTIMPL;
+}
+
+static const struct IAsyncOperation_SpeechRecognitionCompilationResultVtbl async_operation_speech_recognition_compilation_result_vtbl =
+{
+    /* IUnknown methods */
+    async_operation_speech_recognition_compilation_result_QueryInterface,
+    async_operation_speech_recognition_compilation_result_AddRef,
+    async_operation_speech_recognition_compilation_result_Release,
+    /* IInspectable methods */
+    async_operation_speech_recognition_compilation_result_GetIids,
+    async_operation_speech_recognition_compilation_result_GetRuntimeClassName,
+    async_operation_speech_recognition_compilation_result_GetTrustLevel,
+    /* IAsyncOperation<SpeechRecognitionCompilationResult> */
+    async_operation_speech_recognition_compilation_result_get_Completed,
+    async_operation_speech_recognition_compilation_result_put_Completed,
+    async_operation_speech_recognition_compilation_result_GetResults,
+};
+
+static HRESULT async_operation_speech_recognition_compilation_result_create(IAsyncOperation_SpeechRecognitionCompilationResult **out)
+{
+    struct async_operation_speech_recognition_compilation_result *impl;
+
+    if (!(impl = calloc(1, sizeof(*impl))))
+    {
+        *out = NULL;
+        return E_OUTOFMEMORY;
+    }
+
+    impl->IAsyncOperation_SpeechRecognitionCompilationResult_iface.lpVtbl = &async_operation_speech_recognition_compilation_result_vtbl;
+    impl->ref = 1;
+
+    *out = &impl->IAsyncOperation_SpeechRecognitionCompilationResult_iface;
+    return S_OK;
+}
+
 /*
  *
  * IVector<ISpeechRecognitionConstraint>
-- 
2.35.1

