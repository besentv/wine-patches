From c39f81c2a6b5c613abab38bd2c4687bf6ea7bbcb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <besentv@gmail.com>
Date: Mon, 7 Feb 2022 23:05:14 +0100
Subject: [PATCH v2 41/52] windows.media.speech: Add IVectorView<HSTRING> stub.

---
 .../speechrecognitionresult.c                 | 137 ++++++++++++++++++
 1 file changed, 137 insertions(+)

diff --git a/dlls/windows.media.speech/speechrecognitionresult.c b/dlls/windows.media.speech/speechrecognitionresult.c
index 7bc15ad5325..9ffd262dad8 100644
--- a/dlls/windows.media.speech/speechrecognitionresult.c
+++ b/dlls/windows.media.speech/speechrecognitionresult.c
@@ -151,6 +151,143 @@ static HRESULT STDMETHODCALLTYPE vector_view_speech_recognition_result_create(IV
     return S_OK;
 }
 
+/*
+ *
+ * IVectorView<HSTRING>
+ *
+ */
+
+struct vector_view_hstring
+{
+    IVectorView_HSTRING IVectorView_HSTRING_iface;
+    LONG ref;
+};
+
+static inline struct vector_view_hstring *impl_from_IVectorView_HSTRING(IVectorView_HSTRING *iface)
+{
+    return CONTAINING_RECORD(iface, struct vector_view_hstring, IVectorView_HSTRING_iface);
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_QueryInterface(IVectorView_HSTRING *iface, REFIID iid, void **out)
+{
+    TRACE("iface %p, iid %s, out %p.\n", iface, debugstr_guid(iid), out);
+
+    if (IsEqualGUID(iid, &IID_IUnknown) ||
+        IsEqualGUID(iid, &IID_IInspectable) ||
+        IsEqualGUID(iid, &IID_IVectorView_SpeechRecognitionResult))
+    {
+        IUnknown_AddRef(iface);
+        *out = iface;
+        return S_OK;
+    }
+
+    WARN("%s not implemented, returning E_NOINTERFACE.\n", debugstr_guid(iid));
+    *out = NULL;
+    return E_NOINTERFACE;
+}
+
+ULONG STDMETHODCALLTYPE vector_view_hstring_AddRef(IVectorView_HSTRING *iface)
+{
+    struct vector_view_hstring *impl = impl_from_IVectorView_HSTRING(iface);
+
+    ULONG ref = InterlockedIncrement(&impl->ref);
+    TRACE("iface %p, ref %u.\n", iface, ref);
+
+    return ref;
+}
+
+ULONG STDMETHODCALLTYPE vector_view_hstring_Release(IVectorView_HSTRING *iface)
+{
+    struct vector_view_hstring *impl = impl_from_IVectorView_HSTRING(iface);
+
+    ULONG ref = InterlockedDecrement(&impl->ref);
+    TRACE("iface %p, ref %u.\n", iface, ref);
+
+    if(!ref)
+        free(impl);
+
+    return ref;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_GetIids(IVectorView_HSTRING *iface, ULONG *iid_count, IID **iids)
+{
+    FIXME("iface %p, iid_count %p, iids %p stub!\n", iface, iid_count, iids);
+    return E_NOTIMPL;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_GetRuntimeClassName(IVectorView_HSTRING *iface, HSTRING *class_name)
+{
+    FIXME("iface %p, class_name %p stub!\n", iface, class_name);
+    return E_NOTIMPL;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_GetTrustLevel(IVectorView_HSTRING *iface, TrustLevel *trust_level)
+{
+    FIXME("iface %p, trust_level %p stub!\n", iface, trust_level);
+    return E_NOTIMPL;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_GetAt(IVectorView_HSTRING *iface, UINT32 index, HSTRING *value)
+{
+    FIXME("iface %p stub!\n", iface);
+    return E_NOTIMPL;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_get_Size(IVectorView_HSTRING *iface, UINT32 *value)
+{
+    FIXME("iface %p stub!\n", iface);
+    return E_NOTIMPL;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_IndexOf(IVectorView_HSTRING *iface, HSTRING element, UINT32 *index, BOOLEAN *value)
+{
+    FIXME("iface %p stub!\n", iface);
+    return E_NOTIMPL;
+}
+
+HRESULT STDMETHODCALLTYPE vector_view_hstring_GetMany(IVectorView_HSTRING *iface, UINT32 start_index, UINT32 items_size, HSTRING *items, UINT32 *value)
+{
+    FIXME("iface %p stub!\n", iface);
+    return E_NOTIMPL;
+}
+
+static const struct IVectorView_HSTRINGVtbl vector_view_hstring_vtbl =
+{
+    /*** IUnknown methods ***/
+    vector_view_hstring_QueryInterface,
+    vector_view_hstring_AddRef,
+    vector_view_hstring_Release,
+    /*** IInspectable methods ***/
+    vector_view_hstring_GetIids,
+    vector_view_hstring_GetRuntimeClassName,
+    vector_view_hstring_GetTrustLevel,
+    /*** IVectorView<HSTRING > methods ***/
+    vector_view_hstring_GetAt,
+    vector_view_hstring_get_Size,
+    vector_view_hstring_IndexOf,
+    vector_view_hstring_GetMany
+};
+
+
+static HRESULT STDMETHODCALLTYPE vector_view_hstring_create(IVectorView_HSTRING **out)
+{
+    struct vector_view_hstring *impl;
+
+    TRACE("out %p.\n", out);
+
+    if (!(impl = calloc(1, sizeof(*impl))))
+    {
+        *out = NULL;
+        return E_OUTOFMEMORY;
+    }
+
+    impl->IVectorView_HSTRING_iface.lpVtbl = &vector_view_hstring_vtbl;
+    impl->ref = 1;
+
+    *out = &impl->IVectorView_HSTRING_iface;
+    return S_OK;
+}
+
 /*
  *
  * SpeechRecognitionResult
-- 
2.35.1

