From ad49c28002dc11149c5f2529d43223d5e1cae1cc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <besentv@gmail.com>
Date: Sun, 30 Jan 2022 18:21:18 +0100
Subject: [PATCH 08/19] include/windows.media.speechrecognition.idl: Add
 SpeechRecognitionHypothesis.

---
 include/windows.media.speechrecognition.idl | 22 +++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/include/windows.media.speechrecognition.idl b/include/windows.media.speechrecognition.idl
index 48bbb26ec5a..9ecb3213663 100644
--- a/include/windows.media.speechrecognition.idl
+++ b/include/windows.media.speechrecognition.idl
@@ -41,12 +41,14 @@ namespace Windows {
             interface ISpeechContinuousRecognitionResultGeneratedEventArgs;
             interface ISpeechContinuousRecognitionSession;
             interface ISpeechRecognitionConstraint;
+            interface ISpeechRecognitionHypothesis;
             interface ISpeechRecognitionResult;
             interface ISpeechRecognitionResult2;
             interface ISpeechRecognitionSemanticInterpretation;
             runtimeclass SpeechContinuousRecognitionCompletedEventArgs;
             runtimeclass SpeechContinuousRecognitionResultGeneratedEventArgs;
             runtimeclass SpeechContinuousRecognitionSession;
+            runtimeclass SpeechRecognitionHypothesis;
             runtimeclass SpeechRecognitionResult;
             runtimeclass SpeechRecognitionSemanticInterpretation;
         }
@@ -180,6 +182,16 @@ namespace Windows {
                 [propput] HRESULT Probability([in] Windows.Media.SpeechRecognition.SpeechRecognitionConstraintProbability value);
             }
 
+            [
+                contract(Windows.Foundation.UniversalApiContract, 1.0),
+                exclusiveto(Windows.Media.SpeechRecognition.SpeechRecognitionHypothesis),
+                uuid(7a7b25b0-99c5-4f7d-bf84-10aa1302b634)
+            ]
+            interface ISpeechRecognitionHypothesis : IInspectable
+            {
+                [propget] HRESULT Text([out, retval] HSTRING *value);
+            }
+
             [
                 contract(Windows.Foundation.UniversalApiContract, 1.0),
                 exclusiveto(Windows.Media.SpeechRecognition.SpeechRecognitionResult),
@@ -248,6 +260,16 @@ namespace Windows {
                 [default] interface Windows.Media.SpeechRecognition.ISpeechContinuousRecognitionSession;
             }
 
+            [
+                contract(Windows.Foundation.UniversalApiContract, 1.0),
+                marshaling_behavior(agile),
+                threading(both)
+            ]
+            runtimeclass SpeechRecognitionHypothesis
+            {
+                [default] interface Windows.Media.SpeechRecognition.ISpeechRecognitionHypothesis;
+            }
+
             [
                 contract(Windows.Foundation.UniversalApiContract, 1.0),
                 marshaling_behavior(agile)
-- 
2.34.1

