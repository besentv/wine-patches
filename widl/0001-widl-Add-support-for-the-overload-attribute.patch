From d39ae49e2553e9dae4964d4f53816c3941724bba Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <besentv@gmail.com>
Date: Fri, 21 Jan 2022 21:05:52 +0100
Subject: [PATCH v2] widl: Add support for the [overload] attribute.

---
 tools/widl/parser.l     | 1 +
 tools/widl/parser.y     | 3 +++
 tools/widl/widltypes.h  | 1 +
 tools/widl/write_msft.c | 2 ++
 4 files changed, 7 insertions(+)

diff --git a/tools/widl/parser.l b/tools/widl/parser.l
index fb6aa93e390..5124d92d29b 100644
--- a/tools/widl/parser.l
+++ b/tools/widl/parser.l
@@ -403,6 +403,7 @@ static const struct keyword attr_keywords[] =
 	{"optimize",                    tOPTIMIZE,                  0},
 	{"optional",                    tOPTIONAL,                  0},
 	{"out",                         tOUT,                       0},
+	{"overload",                    tOVERLOAD,                  0},
 	{"partial_ignore",              tPARTIALIGNORE,             0},
 	{"pointer_default",             tPOINTERDEFAULT,            0},
 	{"progid",                      tPROGID,                    0},
diff --git a/tools/widl/parser.y b/tools/widl/parser.y
index 04365d62280..930c5dccf69 100644
--- a/tools/widl/parser.y
+++ b/tools/widl/parser.y
@@ -228,6 +228,7 @@ static typelib_t *current_typelib;
 %token tOBJECT tODL tOLEAUTOMATION
 %token tOPTIMIZE tOPTIONAL
 %token tOUT
+%token tOVERLOAD
 %token tPARTIALIGNORE tPASCAL
 %token tPOINTERDEFAULT
 %token tPRAGMA_WARNING
@@ -668,6 +669,7 @@ attribute:					{ $$ = NULL; }
 	| tOPTIMIZE '(' aSTRING ')'		{ $$ = make_attrp(ATTR_OPTIMIZE, $3); }
 	| tOPTIONAL                             { $$ = make_attr(ATTR_OPTIONAL); }
 	| tOUT					{ $$ = make_attr(ATTR_OUT); }
+	| tOVERLOAD '(' aSTRING ')'     { $$ = make_attrp(ATTR_OVERLOAD, $3); }
 	| tPARTIALIGNORE			{ $$ = make_attr(ATTR_PARTIALIGNORE); }
 	| tPOINTERDEFAULT '(' pointer_type ')'	{ $$ = make_attrv(ATTR_POINTERDEFAULT, $3); }
 	| tPROGID '(' aSTRING ')'		{ $$ = make_attrp(ATTR_PROGID, $3); }
@@ -2384,6 +2386,7 @@ struct allowed_attr allowed_attr[] =
     /* ATTR_OPTIMIZE */            { 0, 0, 0,  1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "optimize" },
     /* ATTR_OPTIONAL */            { 0, 0, 0,  0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "optional" },
     /* ATTR_OUT */                 { 1, 0, 0,  0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "out" },
+    /* ATTR_OVERLOAD */            { 0, 0, 0,  0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "overload" },
     /* ATTR_PARAMLCID */           { 0, 0, 0,  0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "lcid" },
     /* ATTR_PARTIALIGNORE */       { 0, 0, 0,  0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "partial_ignore" },
     /* ATTR_POINTERDEFAULT */      { 1, 0, 0,  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "pointer_default" },
diff --git a/tools/widl/widltypes.h b/tools/widl/widltypes.h
index 0ecd8f34d6a..1efdb2714b8 100644
--- a/tools/widl/widltypes.h
+++ b/tools/widl/widltypes.h
@@ -144,6 +144,7 @@ enum attr_type
     ATTR_OPTIMIZE,
     ATTR_OPTIONAL,
     ATTR_OUT,
+    ATTR_OVERLOAD,
     ATTR_PARAMLCID,
     ATTR_PARTIALIGNORE,
     ATTR_POINTERDEFAULT,
diff --git a/tools/widl/write_msft.c b/tools/widl/write_msft.c
index 2df1b318b2d..fbe93cd19cf 100644
--- a/tools/widl/write_msft.c
+++ b/tools/widl/write_msft.c
@@ -1428,6 +1428,8 @@ static HRESULT add_func_desc(msft_typeinfo_t* typeinfo, var_t *func, int index)
             break;
         case ATTR_OUT:
             break;
+        case ATTR_OVERLOAD:
+            break;
         case ATTR_PROPGET:
             invokekind = 0x2; /* INVOKE_PROPERTYGET */
             break;
-- 
2.34.1

